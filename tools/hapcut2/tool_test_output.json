{"version": "0.1", "tests": [{"id": "functional.test_toolbox.TestForTool_hapcut2.test_tool_000000", "has_data": true, "data": {"tool_id": "hapcut2", "tool_version": "1.3.3+galaxy0+ga1", "test_index": 0, "time_seconds": 18.483099699020386, "inputs": {"input_bam": {"src": "hda", "id": "2891970512fa2d5a"}, "input_vcf": {"src": "hda", "id": "5729865256bc2525"}, "output_fragments": true, "output_phased": true}, "job": {"command_line": "ln -s '/tmp/tmpmjh2ow1w/files/e/3/8/dataset_e38d3244-e8f6-4cb5-bc2b-a912e2ba0c5d.dat' input.bam && ln -s '/tmp/tmpmjh2ow1w/files/4/f/7/dataset_4f7a9872-78e1-4d83-90e8-89c67ebf3c74.dat' input.vcf &&   extractHAIRS --bam input.bam --VCF input.vcf --out frags.dat &&  HAPCUT2 --fragments frags.dat --VCF input.vcf --output haplotype.out &&   cp frags.dat '/tmp/tmpmjh2ow1w/files/e/3/b/dataset_e3b0be73-ff69-40ad-bbb1-dd2141b47b59.dat' &&  cp haplotype.out.phased.VCF '/tmp/tmpmjh2ow1w/files/8/3/c/dataset_83c85f70-0e28-46c2-9fd7-1e7a136da804.dat' &&  cp haplotype.out '/tmp/tmpmjh2ow1w/files/9/1/6/dataset_916c5b2b-f27f-4b6a-aae8-c02d3cb3641f.dat'", "command_version": "", "create_time": "2022-02-07T02:54:16.715726", "dependencies": [], "exit_code": 0, "external_id": "41369", "galaxy_version": "21.09", "history_id": "2891970512fa2d5a", "id": "54f2a3a23292eb07", "inputs": {"input_bam": {"id": "2891970512fa2d5a", "src": "hda", "uuid": "e38d3244-e8f6-4cb5-bc2b-a912e2ba0c5d"}, "input_vcf": {"id": "5729865256bc2525", "src": "hda", "uuid": "4f7a9872-78e1-4d83-90e8-89c67ebf3c74"}}, "job_messages": [], "job_metrics": [], "job_stderr": "", "job_stdout": "", "model_class": "Job", "output_collections": {}, "outputs": {"frags": {"id": "54f2a3a23292eb07", "src": "hda", "uuid": "e3b0be73-ff69-40ad-bbb1-dd2141b47b59"}, "haplotype": {"id": "8155e4b4bf1581ff", "src": "hda", "uuid": "916c5b2b-f27f-4b6a-aae8-c02d3cb3641f"}, "haplotype_phased": {"id": "7b55dbb89df8f4e5", "src": "hda", "uuid": "83c85f70-0e28-46c2-9fd7-1e7a136da804"}}, "params": {"__input_ext": "\"bam\"", "chromInfo": "\"/tmp/tmpmjh2ow1w/galaxy-dev/tool-data/shared/ucsc/chrom/?.len\"", "dbkey": "\"?\"", "output_fragments": "\"true\"", "output_phased": "\"true\""}, "state": "ok", "stderr": "\nExtracting haplotype informative reads from bamfiles input.bam minQV 13 minMQ 20 maxIS 1000 \n\nVCF file input.vcf has 3 variants \nadding chrom NC_045512.2 to index \nvcffile input.vcf chromosomes 1 hetvariants 0 variants 3 \ndetected 0 variants with two non-reference alleles, these variants will not be phased\nreading sorted bamfile input.bam \nprocessing reads mapped to chrom \"NC_045512.2\" \n\n\n[2022:02:07 12:54:17] input fragment file: frags.dat\n[2022:02:07 12:54:17] input variantfile (VCF format):input.vcf\n[2022:02:07 12:54:17] haplotypes will be output to file: haplotype.out\n[2022:02:07 12:54:17] solution convergence cutoff: 5\n[2022:02:07 12:54:17] read 3 variants from input.vcf file \n[2022:02:07 12:54:17] read fragment file and variant file: fragments 0 variants 3\nmean number of variants per read is -nan \n[2022:02:07 12:54:17] building read-variant graph for phasing\n[2022:02:07 12:54:17] no of non-trivial connected components 0 max-Degree 0 connected variants 0 coverage-per-variant -nan \n[2022:02:07 12:54:17] fragments 0 snps 3 component(blocks) 0\n[2022:02:07 12:54:17] starting Max-Likelihood-Cut based haplotype assembly algorithm\n[2022:02:07 12:54:17] starting to post-process phased haplotypes to further improve accuracy\n[2022:02:07 12:54:17] starting to output phased haplotypes\n[2022:02:07 12:54:17] OUTPUTTING PRUNED HAPLOTYPE ASSEMBLY TO FILE haplotype.out\n[2022:02:07 12:54:17] N50 haplotype length is 0.00 kilobases \n[2022:02:07 12:54:17] OUTPUTTING PHASED VCF TO FILE haplotype.out.phased.VCF\n", "stdout": "", "tool_id": "hapcut2", "tool_stderr": "\nExtracting haplotype informative reads from bamfiles input.bam minQV 13 minMQ 20 maxIS 1000 \n\nVCF file input.vcf has 3 variants \nadding chrom NC_045512.2 to index \nvcffile input.vcf chromosomes 1 hetvariants 0 variants 3 \ndetected 0 variants with two non-reference alleles, these variants will not be phased\nreading sorted bamfile input.bam \nprocessing reads mapped to chrom \"NC_045512.2\" \n\n\n[2022:02:07 12:54:17] input fragment file: frags.dat\n[2022:02:07 12:54:17] input variantfile (VCF format):input.vcf\n[2022:02:07 12:54:17] haplotypes will be output to file: haplotype.out\n[2022:02:07 12:54:17] solution convergence cutoff: 5\n[2022:02:07 12:54:17] read 3 variants from input.vcf file \n[2022:02:07 12:54:17] read fragment file and variant file: fragments 0 variants 3\nmean number of variants per read is -nan \n[2022:02:07 12:54:17] building read-variant graph for phasing\n[2022:02:07 12:54:17] no of non-trivial connected components 0 max-Degree 0 connected variants 0 coverage-per-variant -nan \n[2022:02:07 12:54:17] fragments 0 snps 3 component(blocks) 0\n[2022:02:07 12:54:17] starting Max-Likelihood-Cut based haplotype assembly algorithm\n[2022:02:07 12:54:17] starting to post-process phased haplotypes to further improve accuracy\n[2022:02:07 12:54:17] starting to output phased haplotypes\n[2022:02:07 12:54:17] OUTPUTTING PRUNED HAPLOTYPE ASSEMBLY TO FILE haplotype.out\n[2022:02:07 12:54:17] N50 haplotype length is 0.00 kilobases \n[2022:02:07 12:54:17] OUTPUTTING PHASED VCF TO FILE haplotype.out.phased.VCF\n", "tool_stdout": "", "traceback": null, "update_time": "2022-02-07T02:54:21.268357", "user_email": "test@bx.psu.edu"}, "status": "success"}}], "summary": {"num_tests": 1, "num_failures": 0, "num_errors": 0, "num_skips": 0}, "exit_code": 0}